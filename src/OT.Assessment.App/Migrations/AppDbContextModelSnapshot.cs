// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OT.Assessment.Tester.Data;

#nullable disable

namespace OT.Assessment.App.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OT.Assessment.Tester.Infrastructure.CasinoWager", b =>
                {
                    b.Property<Guid>("WagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("wagerId");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<Guid?>("BrandId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("brandId");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("countryCode");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdDateTime");

                    b.Property<long?>("Duration")
                        .HasColumnType("bigint")
                        .HasColumnName("duration");

                    b.Property<Guid?>("ExternalReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("externalReferenceId");

                    b.Property<Guid?>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("NumberOfBets")
                        .HasColumnType("int")
                        .HasColumnName("numberOfBets");

                    b.Property<Guid?>("ProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SessionData")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sessionData");

                    b.Property<Guid?>("TransactionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("transactionId");

                    b.Property<Guid?>("TransactionTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.HasKey("WagerId");

                    b.HasIndex("AccountId");

                    b.HasIndex("GameId");

                    b.HasIndex("ProviderId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("CasinoWagers");
                });

            modelBuilder.Entity("OT.Assessment.Tester.Infrastructure.Game", b =>
                {
                    b.Property<Guid>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("gameId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<Guid?>("ProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Theme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("theme");

                    b.HasKey("GameId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("OT.Assessment.Tester.Infrastructure.Player", b =>
                {
                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("accountId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("AccountId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("OT.Assessment.Tester.Infrastructure.Provider", b =>
                {
                    b.Property<Guid>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("providerId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("ProviderId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("OT.Assessment.Tester.Infrastructure.TransactionType", b =>
                {
                    b.Property<Guid>("TransactionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("transactionTypeId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("TransactionTypeId");

                    b.ToTable("TransactionTypes");
                });

            modelBuilder.Entity("OT.Assessment.Tester.Infrastructure.CasinoWager", b =>
                {
                    b.HasOne("OT.Assessment.Tester.Infrastructure.Player", "Player")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("OT.Assessment.Tester.Infrastructure.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");

                    b.HasOne("OT.Assessment.Tester.Infrastructure.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId");

                    b.HasOne("OT.Assessment.Tester.Infrastructure.TransactionType", "TransactionType")
                        .WithMany()
                        .HasForeignKey("TransactionTypeId");

                    b.Navigation("Game");

                    b.Navigation("Player");

                    b.Navigation("Provider");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("OT.Assessment.Tester.Infrastructure.Game", b =>
                {
                    b.HasOne("OT.Assessment.Tester.Infrastructure.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId");

                    b.Navigation("Provider");
                });
#pragma warning restore 612, 618
        }
    }
}
